package com.ijinshan.sjk.po;

// Generated 2012-7-4 12:05:31 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.SelectBeforeUpdate;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * PhoneBasicInfo generated by hbm2java
 */
@Entity
@SelectBeforeUpdate
@DynamicInsert
@DynamicUpdate
@Table(name = "PhoneBasicInfo", catalog = "AndroidMarket")
public class PhoneBasicInfo implements java.io.Serializable {

    private static final long serialVersionUID = -2620685097331072169L;
    private Integer id;
    private String productId;
    // private String vid;
    private String manufactory;
    private String brand;
    private String product;
    private Byte type;
    private Boolean support;
    private String alias;
    private String smallIconPath;
    private String largeIconPath;
    private String screen;
    private String createUser;
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss.S")
    private Date createTime;
    private String lastEditUser;
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss.S")
    private Date lastEditTime;
    private transient List<PhoneRelations> phoneRelationss = new ArrayList<PhoneRelations>(0);

    public PhoneBasicInfo() {
    }

    public PhoneBasicInfo(String productId, String brand, String createUser, Date createTime, String lastEditUser,
            Date lastEditTime) {
        this.productId = productId;
        // this.vid = vid;
        this.brand = brand;
        this.createUser = createUser;
        this.createTime = createTime;
        this.lastEditUser = lastEditUser;
        this.lastEditTime = lastEditTime;
    }

    public PhoneBasicInfo(String productId, String manufactory, String brand, String product, Byte type,
            Boolean support, String alias, String smallIconPath, String largeIconPath, String screen,
            String createUser, Date createTime, String lastEditUser, Date lastEditTime) {
        this.productId = productId;
        // this.vid = vid;
        this.manufactory = manufactory;
        this.brand = brand;
        this.product = product;
        this.type = type;
        this.support = support;
        this.alias = alias;
        this.smallIconPath = smallIconPath;
        this.largeIconPath = largeIconPath;
        this.screen = screen;
        this.createUser = createUser;
        this.createTime = createTime;
        this.lastEditUser = lastEditUser;
        this.lastEditTime = lastEditTime;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "Id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "ProductId", nullable = false, length = 50)
    public String getProductId() {
        return this.productId;
    }

    public void setProductId(String productId) {
        this.productId = productId;
    }

    // @Column(name = "VID", nullable = false, length = 10)
    // public String getVid() {
    // return this.vid;
    // }
    //
    // public void setVid(String vid) {
    // this.vid = vid;
    // }

    @Column(name = "Manufactory", length = 20)
    public String getManufactory() {
        return this.manufactory;
    }

    public void setManufactory(String manufactory) {
        this.manufactory = manufactory;
    }

    @Column(name = "Brand", nullable = false, length = 20)
    public String getBrand() {
        return this.brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    @Column(name = "Product", length = 20)
    public String getProduct() {
        return this.product;
    }

    public void setProduct(String product) {
        this.product = product;
    }

    @Column(name = "Type")
    public Byte getType() {
        return this.type;
    }

    public void setType(Byte type) {
        this.type = type;
    }

    @Column(name = "Support")
    public Boolean getSupport() {
        return this.support;
    }

    public void setSupport(Boolean support) {
        this.support = support;
    }

    @Column(name = "Alias", length = 50)
    public String getAlias() {
        return this.alias;
    }

    public void setAlias(String alias) {
        this.alias = alias;
    }

    @Column(name = "SmallIconPath", length = 100)
    public String getSmallIconPath() {
        return this.smallIconPath;
    }

    public void setSmallIconPath(String smallIconPath) {
        this.smallIconPath = smallIconPath;
    }

    @Column(name = "LargeIconPath", length = 100)
    public String getLargeIconPath() {
        return this.largeIconPath;
    }

    public void setLargeIconPath(String largeIconPath) {
        this.largeIconPath = largeIconPath;
    }

    @Column(name = "Screen", length = 100)
    public String getScreen() {
        return this.screen;
    }

    public void setScreen(String screen) {
        this.screen = screen;
    }

    @Column(name = "CreateUser", nullable = false, length = 20)
    public String getCreateUser() {
        return this.createUser;
    }

    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CreateTime", nullable = false, length = 19)
    public Date getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    @Column(name = "LastEditUser", nullable = false, length = 20)
    public String getLastEditUser() {
        return this.lastEditUser;
    }

    public void setLastEditUser(String lastEditUser) {
        this.lastEditUser = lastEditUser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "LastEditTime", nullable = false, length = 19)
    public Date getLastEditTime() {
        return this.lastEditTime;
    }

    public void setLastEditTime(Date lastEditTime) {
        this.lastEditTime = lastEditTime;
    }

    /**
     * @return the phoneRelationss
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "phoneBasicInfo")
    @OrderBy("id")
    public List<PhoneRelations> getPhoneRelationss() {
        return phoneRelationss;
    }

    /**
     * @param phoneRelationss
     *            the phoneRelationss to set
     */
    public void setPhoneRelationss(List<PhoneRelations> phoneRelationss) {
        this.phoneRelationss = phoneRelationss;
    }

}
